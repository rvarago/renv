name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

env:
  NIX_CONFIG: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"

jobs:
  system-home:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          #- macos-latest
          - macos-13
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: System install
        shell: bash
        run: |
          sed -i.bak 's/rvarago/runner/g' ./nixpkgs/settings.nix
          echo no | bash -x ./renvctl system:install || true

      - name: System verify
        shell: bash
        run: |
          . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          nix --version
          nix flake --version
          nix-shell -p hello --run hello
          cat ./nixpkgs/modules/ephemeral.nix

      - name: System update
        shell: bash
        run: |
          ./renvctl system:sync

      - name: Home sync
        shell: bash
        run: |
          . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh

          ./renvctl home:sync

      - name: Home verify
        shell: bash
        run: |
          . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          grep 'bin/fish' /etc/shells
          grep 'bin/fish' /etc/passwd || true #FIXME: macos runner
          emacs --version

  ext:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # FIXME: VSCode is broken on Mac (e.g. assumes dpkg)
          # - macos-13
          # - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install
        shell: bash
        run: |
          ./renvctl vscode:sync
          ./renvctl lean:sync
          # ./renvctl ocaml:sync
          ./renvctl rust:sync

      - name: Verify
        shell: bash
        run: |
          source ~/.profile

          code --version
          elan --version
          # ocaml --version
          cargo --version
